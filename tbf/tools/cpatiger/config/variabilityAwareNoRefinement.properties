# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.value.ValueAnalysisCPA, cpa.bdd.BDDCPA

# Enable MultiEdges, this gives a little bit of performance.
cfa.useMultiEdges = true

# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
# callstack is necessary for ABE with blocks across function boundaries to work well
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

cpa.predicate.blk.alwaysAtFunctions = true
cpa.predicate.blk.alwaysAtLoops     = true

# Setting the option to make memory allocations always return correct addresses
cpa.predicate.memoryAllocationsAlwaysSucceed = true

# New heuristic for cillified files: pre-populate small structures with all their fields
cpa.predicate.maxPreFilledAllocationSize = 0

# Use the Tiger Algorithm
analysis.algorithm.tiger = true
tiger.tiger_with_presenceConditions = true

ValueAnalysisCPA.precision.variableBlacklist = (\w)*__SELECTED_FEATURE_(\w)*
ValueAnalysisCPA.precision.trackBooleanVariables = true
ValueAnalysisCPA.precision.trackIntAddVariables = true
ValueAnalysisCPA.precision.trackIntEqualVariables = true
ValueAnalysisCPA.precision.trackVariablesBesidesEqAddBool = true

BDDCPA.precision.variableWhitelist = (\w)*__SELECTED_FEATURE_(\w)*
BDDCPA.precision.trackBooleanVariables = false
BDDCPA.precision.trackIntAddVariables = false
BDDCPA.precision.trackIntEqualVariables = false
BDDCPA.precision.trackVariablesBesidesEqAddBool = false

# Additional resource limits.
limits.time.cpu = 3600s

tiger.fqlQuery =COVER "EDGES(ID)*".EDGES(@BASICBLOCKENTRY)."EDGES(ID)*"
# tiger.timeoutStrategy = RETRY_AFTER_TIMEOUT
tiger.limitsPerGoal.time.cpu = 20
tiger.limitsPerGoal.time.cpu.increment = 10
# tiger.reusePredicates = false
# tiger.reuseARG = false
tiger.allCoveredGoalsPerTestCase = false
tiger.printLabels = false

tiger.algorithmConfigurationFile = ./tiger-internal-algorithm---pred-refiner.properties

#include ./includes/cex-check-valueAnalysis.properties
analysis.algorithm.CEGAR = true
cegar.refiner = cpa.predicate.PredicateRefiner
# Guessing predicates statically from the CFA is a heuristic that pays off.
cpa.predicate.refinement.performInitialStaticRefinement = true
