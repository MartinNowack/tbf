#include predicateAnalysis.properties

CompositeCPA.cpas = cpa.location.LocationCPA, \
                    cpa.callstack.CallstackCPA, \
                    cpa.functionpointer.FunctionPointerCPA, \
                    cpa.overflow.OverflowCPA,\
                    cpa.predicate.PredicateCPA

specification = specification/overflow.spc

# cfa simplifications might remove overflows:
cfa.simplifyCfa = false
cfa.simplifyConstExpressions = false

# expressions without live variables can contain overflows, e.g. if they contain literals!
cfa.findLiveVariables = false
overflow.useLiveness = false

# variables classified as irrelevant might be in fact relevant,
# because the added overflow assumptions lead to branching based on them:
cpa.predicate.ignoreIrrelevantVariables = false

overflow.config = predicateAnalysis-overflow.properties
